// Cloudflare Workers 版本

const ACCESS_KEY = "Zhao_2025@TV!";
const CACHE_TTL = 300;
const mapping = {
  '/api/suoni': 'https://suoniapi.com/api.php/provide/vod',
  '/api/lzi': 'https://cj.lziapi.com/api.php/provide/vod',
  '/api/wwzy': 'https://wwzy.tv/api.php/provide/vod',
  '/api/wujin': 'https://api.wujinapi.me/api.php/provide/vod',
  '/api/apiyhzy': 'https://m3u8.apiyhzy.com/api.php/provide/vod'
};

export default {
  async fetch(request, env, ctx) {
    const url = new URL(request.url);

    // 密钥校验
    if (url.searchParams.get("key") !== ACCESS_KEY) {
      return new Response(JSON.stringify({ error: "无效密钥" }), {
        status: 403,
        headers: { 'Content-Type': 'application/json; charset=utf-8' }
      });
    }

    // 找到目标
    let target = '';
    for (const [prefix, origin] of Object.entries(mapping)) {
      if (url.pathname.startsWith(prefix)) {
        target = origin + url.search.replace(`key=${ACCESS_KEY}`, '');
        break;
      }
    }

    if (!target) {
      return new Response(JSON.stringify({ error: "无效路径" }), {
        status: 404,
        headers: { 'Content-Type': 'application/json; charset=utf-8' }
      });
    }

    // 缓存
    const cache = caches.default;
    const cacheKey = new Request(target, request);
    let response = await cache.match(cacheKey);
    if (response) return response;

    // 请求源站
    response = await fetch(target, {
      headers: { 'User-Agent': 'TVBox/1.0', 'Referer': target }
    });

    if (response.status === 200) {
      ctx.waitUntil(cache.put(cacheKey, response.clone()));
    }

    return response;
  }
};
